
plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id "application"
}

compileJava   {
    sourceCompatibility = "11"
    targetCompatibility = "11"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation(
            // Use TestNG framework, also requires calling test.useTestNG() below
            'org.testng:testng:7.9.0',

            // Guice dependency injection framework
            "com.google.inject:guice:7.0.0",

            // Jackson Json parser for Java
            "com.fasterxml.jackson.core:jackson-databind:2.16;1",
            // Jackson support for properties format file (*.properties)
            "com.fasterxml.jackson.dataformat:jackson-dataformat-properties:2.16.1",

            // Appium java client
            "io.appium:java-client:9.1.0",
            "org.seleniumhq.selenium:selenium-java:4.17.0",

            // Extent reports
            "com.aventstack:extentreports:5.1.1",

            // Logback api, core, and slf4j bridge
            "org.slf4j:slf4j-api:2.0.12",
            "ch.qos.logback:logback-core:1.4.14",
            "ch.qos.logback:logback-classic:1.4.14",
    )
    
    compileOnly(
            // Lombok
            "org.projectlombok:lombok:1.18.30"
    )
    annotationProcessor(
            // Lombok
            "org.projectlombok:lombok:1.18.30"
    )
}

test {
    // pass all system properties to java system properties
    systemProperties System.getProperties()
    
    include("cross/platform/test/suite/testplan/*")

    useTestNG() {
        listeners << "cross.platform.test.suite.configuration.TestNGListener"
    }

    outputs.upToDateWhen { false }
    testLogging {
        events = ["standardError", "skipped", "failed"]
        exceptionFormat = "full"
    }

    onOutput { descriptor, event ->
        if (event.destination == TestOutputEvent.Destination.StdOut) {
            logger.lifecycle(event.message.replaceFirst(/\s+$/, ""))
        }
    }
}


